{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Button/Button.module.css","components/UI/Loader/Loader.module.css","containers/Auth/Auth.module.css","components/UI/Input/Input.module.css","HOC/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","containers/QuizList/QuizList.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","HOC/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","Store/Actions/quiz.js","Store/Actions/actionsTypes.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","Store/Actions/auth.js","containers/Auth/Auth.js","Form/FormFramework.js","HOC/Auxiliary/Auxiliary.js","components/UI/Select/Select.js","containers/QuizCreator/QuizCreator.js","Store/Actions/create.js","components/Logout/Logout.js","App.js","serviceWorker.js","Store/Reducers/quiz.js","Store/Reducers/create.js","Store/Reducers/auth.js","Store/Reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","Drawer","clickHasndler","onClose","links","map","link","index","key","to","exact","activeClassName","active","label","this","close","isAuthenticated","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswersList","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Loader","Center","axios","create","baseURL","fetchQuizSuccess","fetchQuizesSuccess","quizes","fetchQuizesError","e","error","quizSetState","answerState","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","loading","isFinished","activeQuestion","quizAnswerClick","dispatch","quizId","a","get","response","data","answerId","getState","rightAnswerId","timeout","window","setTimeout","isQuizFinished","number","clearTimeout","QuizList","name","fetchQuizes","renderQuizes","forEach","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","autoLogout","time","logout","localStorage","removeItem","authSuccess","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","isValid","trim","is","onSubmit","AuthForm","renderInputs","isLogin","authData","returnSecureToken","url","post","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","createControl","config","validate","validateForm","hasOwnProperty","Auxiliary","Select","options","option","createOptionControl","createFormControls","option1","option2","option3","option4","QuizCreator","sibmitHandler","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","selectChangeHandler","select","renderControls","item","Logout","App","autologin","routes","path","component","withRouter","getItem","Boolean","location","hostname","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f274f02d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__2LXv4\",\"close\":\"Drawer_close__2LIl2\",\"acive\":\"Drawer_acive__2xVQT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__3Mygd\",\"open\":\"MenuToggle_open__2o0iP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__3jYaV\",\"QuizWrapper\":\"Quiz_QuizWrapper__1McP4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__oi3IQ\",\"Question\":\"ActiveQuiz_Question__3o7Zd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__3rtqG\",\"success\":\"AnswerItem_success__3XM_x\",\"error\":\"AnswerItem_error__2xMO5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__2QvHg\",\"success\":\"FinishedQuiz_success__6MlcB\",\"error\":\"FinishedQuiz_error__3Z-jH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2ac8f\",\"error\":\"Button_error__1IQkI\",\"success\":\"Button_success__16i1F\",\"primary\":\"Button_primary__1My0x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Center\":\"Loader_Center__2dpGw\",\"Loader\":\"Loader_Loader__2F6Cz\",\"lds-facebook\":\"Loader_lds-facebook__1Q1Xf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__28wnx\",\"AuthForm\":\"Auth_AuthForm__-WzHH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__SwPcc\",\"invalid\":\"Input_invalid__3vyIO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__mezfs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__1zFFR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__1s9bD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__3fShh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__Q-GLS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__2znyo\"};","import React from 'react'\r\nimport classes from '../MenuToggle/MenuToggle.module.css'\r\n\r\nconst MenuToggle = props => {\r\n    const cls = [\r\n        classes.MenuToggle,\r\n        'fa',\r\n    ]\r\n\r\n    if (props.isOpen) {\r\n        cls.push('fa-times')\r\n        cls.push(classes.open)\r\n    } else {\r\n        cls.push('fa-bars')\r\n    }\r\n\r\n    return (\r\n        <i \r\n            className={cls.join(' ')}\r\n            onClick={props.onToggle}\r\n        />\r\n    )\r\n}\r\n\r\nexport default MenuToggle","import React from 'react'\r\nimport classes from '../Backdrop/Backdrop.module.css'\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick} />\r\n\r\nexport default Backdrop","import React, {Component} from 'react'\r\nimport classes from '../Drawer/Drawer.module.css'\r\nimport Backdrop from '../../UI/Backdrop/Backdrop'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nclass Drawer extends Component {\r\n    \r\n    clickHasndler = () => {\r\n        this.props.onClose()\r\n    }\r\n\r\n    renderLinks(links){\r\n        return links.map((link, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <NavLink\r\n                        to={link.to}\r\n                        exact={link.exact}\r\n                        activeClassName={classes.active}\r\n                        onClick={this.clickHasndler}\r\n                    >\r\n                        {link.label}\r\n                    </NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const cls = [classes.Drawer]\r\n        if (!this.props.isOpen) {\r\n            cls.push(classes.close)\r\n        }\r\n\r\n        const links = [\r\n            {to: '/', label: 'Cписок тестов', exact: true}\r\n        ]\r\n\r\n        if (this.props.isAuthenticated) {\r\n            links.push({to: '/quiz-creator', label: 'Создать тест', exact: false})\r\n            links.push({to: '/logout', label: 'Выйти', exact: false})\r\n        }else {\r\n            links.push({to: '/auth', label: 'Авторизация', exact: false})\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <nav className={cls.join(' ')}>\r\n                    <ul>\r\n                        {this.renderLinks(links)}\r\n                    </ul>\r\n                </nav>\r\n                {this.props.isOpen ? <Backdrop onClick={this.props.onClose} /> : null}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Drawer","import React, {Component} from 'react'\r\nimport classes from '../Layout/Layout.module.css'\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\r\nimport Drawer from '../../components/Navigation/Drawer/Drawer'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Layout extends Component {\r\n    \r\n    state={\r\n        menu: false,\r\n    }\r\n    \r\n    toggleMenuHandler = () => {\r\n        this.setState({\r\n            menu: !this.state.menu\r\n        })\r\n    }\r\n    \r\n    menuCloseHandler = () => {\r\n        this.setState({\r\n            menu: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Layout}>\r\n                <Drawer \r\n                    isOpen={this.state.menu}\r\n                    onClose={this.menuCloseHandler}\r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                />\r\n                <MenuToggle \r\n                    onToggle={this.toggleMenuHandler}\r\n                    isOpen={this.state.menu}\r\n                />\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAuthenticated: !!state.auth.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout)","import React from 'react'\r\nimport classes from '../AnswerItem/AnswerItem.module.css'\r\n\r\nconst AnswerItem = props => {\r\n    const cls = [classes.AnswerItem]\r\n\r\n    if (props.state) {\r\n        cls.push(classes[props.state])\r\n    }\r\n    \r\n    return (\r\n        <li className={cls.join(' ')}\r\n            onClick={() => props.onAnswerClick(props.answer.id)}>\r\n            {props.answer.text  }            \r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AnswerItem","import React from 'react'\r\nimport classes from '../AnswersList/AnswersList.module.css'\r\nimport AnswerItem from '../AnswersList/AnswerItem/AnswerItem'\r\n\r\nconst AnswersList = props => (\r\n    <ul className={classes.AnswersList}>\r\n        {props.answers.map((answer, index) => {\r\n            return (\r\n                <AnswerItem \r\n                    key={index}\r\n                    answer={answer}\r\n                    onAnswerClick={props.onAnswerClick}\r\n                    state={props.state ? props.state[answer.id] : null}\r\n                />\r\n            )\r\n        })\r\n        }\r\n    </ul>\r\n)\r\n\r\nexport default AnswersList","import React from 'react'\r\nimport classes from '../ActiveQuiz/ActiveQuiz.module.css'\r\nimport AnswersList from './AnswersList/AnswersList'\r\n\r\n\r\nconst ActiveQuiz = props => (\r\n    <div className={classes.ActiveQuiz}>\r\n        <p className={classes.Question}>\r\n            <span>\r\n                <strong>{props.answerNumber}.</strong>&nbsp;\r\n                {props.question}\r\n            </span>\r\n            <small>{props.answerNumber} из {props.quizLength}</small>\r\n        </p>\r\n        <AnswersList\r\n            state={props.state}\r\n            answers={props.answers}\r\n            onAnswerClick={props.onAnswerClick}\r\n        />\r\n    </div>\r\n)\r\n\r\nexport default ActiveQuiz","import React from 'react'\r\nimport classes from '../Button/Button.module.css'\r\n\r\nconst Button = props => {\r\n    \r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ]\r\n    \r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            className={cls.join(' ')}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport classes from '../FinishedQuiz/FinishedQuiz.module.css'\r\nimport Button from '../UI/Button/Button'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst FinishedQuiz = props => {\r\n    \r\n    const successCount = Object.keys(props.results).reduce((total, key) => {\r\n        if (props.results[key] === 'success') {\r\n            total++\r\n        }\r\n        return total\r\n    }, 0)\r\n    \r\n    \r\n    return (\r\n        <div className={classes.FinishedQuiz}>\r\n            <ul>\r\n                {props.quiz.map((quizItem, index) => {\r\n                    const cls = [\r\n                        'fa',\r\n                        props.results[quizItem.id] === 'error' ? 'fa-times' : 'fa-check',\r\n                        classes[props.results[quizItem.id]]\r\n                    ]\r\n                    return (\r\n                        <li key={index}>\r\n                            <strong>{index + 1}</strong>.&nbsp;\r\n                            {quizItem.question}\r\n                            <i className={cls.join(' ')}/>\r\n                        </li>\r\n                    )\r\n                })}\r\n            </ul>\r\n            <p>правильно {successCount} из {props.quiz.length}</p>\r\n            <div>\r\n                <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\r\n                <Link to={'/'}>\r\n                <Button type=\"success\">Перейти в список тестов</Button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FinishedQuiz","import React from 'react'\r\nimport classes from '../Loader/Loader.module.css'\r\n\r\nconst Loader = props => (\r\n    <div className={classes.Center}>\r\n        <div className={classes.Loader}>\r\n            <div /><div /><div />\r\n        </div>\r\n    </div>\r\n)\r\nexport default Loader","import axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://react-quiz-d33b4.firebaseio.com/'\r\n})","import axios from '../../axios/axios-quiz'\r\nimport {\r\n    FETCH_QUIZES_START,\r\n    FETCH_QUIZES_SUCCESS,\r\n    FETCH_QUIZES_ERROR,\r\n    FETCH_QUIZ_SUCCESS,\r\n    QUIZ_SET_STATE,\r\n    FINISH_QUIZ,\r\n    QUIZ_NEXT_QUESTION,\r\n    QUIZ_RETRY\r\n    } from '../Actions/actionsTypes'\r\n\r\n\r\n\r\n    export function fetchQuizes() {\r\n        return async dispatch => {\r\n          dispatch(fetchQuizesStart())\r\n          try {\r\n            const response = await axios.get('/quizes.json')\r\n      \r\n            const quizes = []\r\n      \r\n            Object.keys(response.data).forEach((key, index) => {\r\n              quizes.push({\r\n                id: key,\r\n                name: `Тест №${index + 1}`\r\n              })\r\n            })\r\n      \r\n            dispatch(fetchQuizesSuccess(quizes))\r\n          } catch (e) {\r\n            dispatch(fetchQuizesError(e))\r\n          }\r\n        }\r\n      }\r\n      \r\n      export function fetchQuizById(quizId) {\r\n        return async dispatch => {\r\n          dispatch(fetchQuizesStart())\r\n      \r\n          try {\r\n            const response = await axios.get(`/quizes/${quizId}.json`)\r\n            const quiz = response.data\r\n      \r\n            dispatch(fetchQuizSuccess(quiz))\r\n          } catch (e) {\r\n            dispatch(fetchQuizesError(e))\r\n          }\r\n        }\r\n      }\r\n      \r\n      export function fetchQuizSuccess(quiz) {\r\n        return {\r\n          type: FETCH_QUIZ_SUCCESS,\r\n          quiz\r\n        }\r\n      }\r\n      \r\n      export function fetchQuizesStart() {\r\n        return {\r\n          type: FETCH_QUIZES_START\r\n        }\r\n      }\r\n      \r\n      export function fetchQuizesSuccess(quizes) {\r\n        return {\r\n          type: FETCH_QUIZES_SUCCESS,\r\n          quizes\r\n        }\r\n      }\r\n      \r\n      export function fetchQuizesError(e) {\r\n        return {\r\n          type: FETCH_QUIZES_ERROR,\r\n          error: e\r\n        }\r\n      }\r\n      \r\n      export function quizSetState(answerState, results) {\r\n        return {\r\n          type: QUIZ_SET_STATE,\r\n          answerState, results\r\n        }\r\n      }\r\n      \r\n      export function finishQuiz() {\r\n        return {\r\n          type: FINISH_QUIZ\r\n        }\r\n      }\r\n      \r\n      export function quizNextQuestion(number) {\r\n        return {\r\n          type: QUIZ_NEXT_QUESTION,\r\n          number\r\n        }\r\n      }\r\n      \r\n      export function retryQuiz() {\r\n        return {\r\n          type: QUIZ_RETRY\r\n        }\r\n      }\r\n      \r\n      export function quizAnswerClick(answerId) {\r\n        return (dispatch, getState) => {\r\n          const state = getState().quiz\r\n      \r\n          if (state.answerState) {\r\n            const key = Object.keys(state.answerState)[0]\r\n            if (state.answerState[key] === 'success') {\r\n              return\r\n            }\r\n          }\r\n      \r\n          const question = state.quiz[state.activeQuestion]\r\n          const results = state.results\r\n      \r\n          if (question.rightAnswerId === answerId) {\r\n            if (!results[question.id]) {\r\n              results[question.id] = 'success'\r\n            }\r\n      \r\n            dispatch(quizSetState({[answerId]: 'success'}, results))\r\n      \r\n            const timeout = window.setTimeout(() => {\r\n              if (isQuizFinished(state)) {\r\n                dispatch(finishQuiz())\r\n              } else {\r\n                dispatch(quizNextQuestion(state.activeQuestion + 1))\r\n              }\r\n              window.clearTimeout(timeout)\r\n            }, 1000)\r\n          } else {\r\n            results[question.id] = 'error'\r\n            dispatch(quizSetState({[answerId]: 'error'}, results))\r\n          }\r\n        }\r\n      }\r\n      \r\n      function isQuizFinished(state) {\r\n        return state.activeQuestion + 1 === state.quiz.length\r\n      }","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START'\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS'\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR'\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS'\r\nexport const QUIZ_SET_STATE = 'FETCH_SET_STATE'\r\nexport const FINISH_QUIZ = 'FINISH_QUIZ'\r\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION'\r\nexport const QUIZ_RETRY = 'QUIZ_RETRY'\r\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION'\r\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION'\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'","import React, {Component} from 'react'\r\nimport classes from '../Quiz/Quiz.module.css'\r\nimport ActiveQuiz from '../../components/ActiveQuiz/ActiveQuiz'\r\nimport FinishedQuiz from '../../components/FinishedQuiz/FinishedQuiz'\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport { connect } from 'react-redux'\r\nimport {fetchQuizById, quizAnswerClick, retryQuiz} from '../../Store/Actions/quiz'\r\n\r\nclass Quiz extends Component {\r\n\r\n    async componentDidMount() {\r\n       this.props.fetchQuizById(this.props.match.params.id)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.retryQuiz()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Quiz}>\r\n                <div className={classes.QuizWrapper}>\r\n                    <h1>Ответьте на все вопросы</h1>\r\n                    {\r\n                        this.props.loading || !this.props.quiz\r\n                        ? <Loader />\r\n                        : this.props.isFinished\r\n                        ? <FinishedQuiz \r\n                            results={this.props.results}\r\n                            quiz={this.props.quiz}\r\n                            onRetry={this.props.retryQuiz}\r\n                          />\r\n                        :  <ActiveQuiz \r\n                                answers={this.props.quiz[this.props.activeQuestion].answers}\r\n                                question={this.props.quiz[this.props.activeQuestion].question}\r\n                                onAnswerClick={this.props.quizAnswerClick}\r\n                                quizLength={this.props.quiz.length}\r\n                                answerNumber={this.props.activeQuestion + 1}\r\n                                state={this.props.answerState}\r\n                            />\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        results: state.quiz.results,\r\n        isFinished: state.quiz.isFinished,\r\n        activeQuestion: state.quiz.activeQuestion,\r\n        answerState: state.quiz.answerState,\r\n        quiz: state.quiz.quiz,\r\n        loading: state.quiz.loading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n        quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n        retryQuiz: () => dispatch(retryQuiz())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import React, { Component } from 'react'\r\nimport classes from '../QuizList/QuizList.module.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Loader from '../../components/UI/Loader/Loader'\r\nimport { connect } from 'react-redux'\r\nimport { fetchQuizes } from '../../Store/Actions/quiz'\r\n\r\nclass QuizList extends Component {\r\n\r\n  renderQuizes() {\r\n    return this.props.quizes.map(quiz => {\r\n      return (\r\n        <li\r\n          key={quiz.id}\r\n        >\r\n          <NavLink to={'/quiz/' + quiz.id}>\r\n            {quiz.name}\r\n          </NavLink>\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchQuizes()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.QuizList}>\r\n        <div>\r\n          <h1>Список тестов</h1>\r\n\r\n          {\r\n            this.props.loading && this.props.quizes.length !== 0\r\n              ? <Loader />\r\n              : <ul>\r\n                  { this.renderQuizes() }\r\n                </ul>\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    quizes: state.quiz.quizes,\r\n    loading: state.quiz.loading\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchQuizes: () => dispatch(fetchQuizes())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList)","import React from 'react'\r\nimport classes from '../Input/Input.module.css'\r\n\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n    return !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = props => {\r\n    const inputType = props.type || 'text'\r\n    const cls = [classes.Input]\r\n    const htmlFor = `${inputType}-${Math.random()}`\r\n\r\n    if (isInvalid(props)) {\r\n        cls.push(classes.invalid)\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor=\"\">{props.label}</label>\r\n            <input \r\n                type={inputType}\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n            {\r\n                isInvalid(props)\r\n                ? <span>{props.errorMessage || 'Введите верные значения'}</span>\r\n                : null\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input","import axios from 'axios'\r\nimport {\r\n    AUTH_SUCCESS,\r\n    AUTH_LOGOUT\r\n} from '../Actions/actionsTypes'\r\nexport function auth(email, password, isLogin) {\r\n    return async dispatch => {\r\n        const authData = {email, password, returnSecureToken: true}\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyD3KFTS6NkJXQ165YZ4TA1iYCIGVGtXlCw'\r\n        if (isLogin) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyD3KFTS6NkJXQ165YZ4TA1iYCIGVGtXlCw'\r\n        }\r\n        const response = await axios.post(url, authData)\r\n        const data = response.data\r\n        const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n\r\n        localStorage.setItem('token', data.idToken)\r\n        localStorage.setItem('userId', data.localId)\r\n        localStorage.setItem('expirationDate', expirationDate)\r\n\r\n        dispatch(authSuccess(data.idToken))\r\n        dispatch(autoLogout(data.expiresIn))\r\n    }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        }, time * 1000)\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('userId')\r\n    localStorage.removeItem('expirationDate')\r\n    return {\r\n        type: AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport function autologin() {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token')\r\n        if (!token) {\r\n            dispatch(logout())\r\n        }else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout())\r\n            }else {\r\n                dispatch(authSuccess(token))\r\n                dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function authSuccess(token) {\r\n    return {\r\n        type: AUTH_SUCCESS,\r\n        token\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport classes from '../Auth/Auth.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from \"../../components/UI/Input/Input\"\r\nimport is from 'is_js'\r\nimport { connect } from 'react-redux'\r\nimport {auth} from '../../Store/Actions/auth'\r\n\r\nclass Auth extends Component {\r\n    \r\n    state = {\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: '',  \r\n                type: 'email',\r\n                label: 'Email',\r\n                errorMessage: 'Введите корректный email',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    email:true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',  \r\n                type: 'password',\r\n                label: 'Пароль',\r\n                errorMessage: 'Введите корректный пароль',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loginHandler = () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            true\r\n        )\r\n    }\r\n\r\n    registerHandler = () => {\r\n        this.props.auth(\r\n            this.state.formControls.email.value,\r\n            this.state.formControls.password.value,\r\n            false\r\n        )\r\n    }\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    validateControl(value, validation) {\r\n        if (!validation) {\r\n            return true\r\n        }\r\n\r\n        let isValid = true\r\n\r\n        if (validation.required) {\r\n            isValid = value.trim() !== '' && isValid\r\n        }\r\n        if (validation.email) {\r\n            isValid = is.email(value) && isValid\r\n        }\r\n        if (validation.minLength) {\r\n            isValid = value.length >= validation.minLength && isValid\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    onChangeHandler = (event, controlName) => {\r\n        const formControls = {...this.state.formControls}\r\n        const control = {...formControls[controlName]}\r\n\r\n        control.value = event.target.value\r\n        control.touched = true\r\n        control.valid = this.validateControl(control.value, control.validation)\r\n\r\n        formControls[controlName] = control\r\n        \r\n        let isFormValid = true\r\n\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = formControls[name].valid && isFormValid\r\n        })\r\n\r\n        this.setState({\r\n            formControls, isFormValid\r\n        })\r\n    }\r\n    \r\n    renderInputs() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName]\r\n            return (\r\n                <Input \r\n                    key={controlName + index}\r\n                    type={control.type}\r\n                    value={control.value}\r\n                    valid={control.valid}\r\n                    touched={control.touched}\r\n                    label={control.label}\r\n                    shouldValidate={!!control.validation}\r\n                    errorMessage={control.errorMessage}\r\n                    onChange={event => this.onChangeHandler(event, controlName)}\r\n                />\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Auth}>\r\n                <div>\r\n                    <h1>Авторизация</h1>\r\n                    <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n                        {this.renderInputs()}\r\n                        <Button\r\n                            type=\"success\"\r\n                            onClick={this.loginHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                            >Войти\r\n                        </Button>\r\n                        <Button\r\n                            type=\"primary\"\r\n                            onClick={this.registerHandler}\r\n                            disabled={!this.state.isFormValid}\r\n                        >Зарегестрироваться\r\n                        </Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth)","export function createControl(config, validation) {\r\n    return {\r\n      ...config,\r\n      validation,\r\n      valid: !validation,\r\n      touched: false,\r\n      value: ''\r\n    }\r\n  }\r\n  \r\n  export function validate(value, validation = null) {\r\n    if (!validation) {\r\n      return true\r\n    }\r\n  \r\n    let isValid = true\r\n  \r\n    if (validation.required) {\r\n      isValid = value.trim() !== '' && isValid\r\n    }\r\n  \r\n    return isValid\r\n  }\r\n  \r\n  export function validateForm(formControls) {\r\n    let isFormValid = true\r\n  \r\n    for (let control in formControls) {\r\n      if (formControls.hasOwnProperty(control)) {\r\n        isFormValid = formControls[control].valid && isFormValid\r\n      }\r\n    }\r\n  \r\n    return isFormValid\r\n  }","const Auxiliary = props => props.children\r\n\r\nexport default Auxiliary","import React from 'react'\r\nimport classes from '../Select/Select.module.css'\r\n\r\nconst Select = props => {\r\n\r\n    const htmlFor = `${props.label}-${Math.random()}`\r\n\r\n    return (\r\n        <div className={classes.Select}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <select\r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            >\r\n                {props.options.map((option, index) => {\r\n                    return (\r\n                        <option\r\n                            value={option.value}\r\n                            key={option.value + index}\r\n                        >\r\n                            {option.text}\r\n                        </option>\r\n                    )\r\n                })}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\nexport default Select","import React, {Component} from 'react'\r\nimport classes from '../QuizCreator/QuizCreator.module.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport {createControl, validate, validateForm} from '../../Form/FormFramework'\r\nimport Auxiliary from '../../HOC/Auxiliary/Auxiliary'\r\nimport Select from '../../components/UI/Select/Select'\r\nimport { connect } from 'react-redux'\r\nimport { createQuizQuestion, finishCreateQuiz} from '../../Store/Actions/create'\r\n\r\nfunction createOptionControl(number) {\r\n    return createControl({\r\n      label: `Вариант ${number}`,\r\n      errorMessage: 'Значение не может быть пустым',\r\n      id: number\r\n    }, {required: true})\r\n  }\r\n  \r\n  function createFormControls() {\r\n    return {\r\n      question: createControl({\r\n        label: 'Введите вопрос',\r\n        errorMessage: 'Вопрос не может быть пустым'\r\n      }, {required: true}),\r\n      option1: createOptionControl(1),\r\n      option2: createOptionControl(2),\r\n      option3: createOptionControl(3),\r\n      option4: createOptionControl(4)\r\n    }\r\n  }\r\n  \r\n  class QuizCreator extends Component {\r\n  \r\n    state = {\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls()\r\n    }\r\n  \r\n    sibmitHandler = event => {\r\n      event.preventDefault()\r\n    }\r\n  \r\n    addQuestionHandler = event => {\r\n      event.preventDefault()\r\n  \r\n      const {question, option1, option2, option3, option4} = this.state.formControls\r\n  \r\n      const questionItem = {\r\n        question: question.value,\r\n        id: this.props.quiz.length + 1,\r\n        rightAnswerId: this.state.rightAnswerId,\r\n        answers: [\r\n          {text: option1.value, id: option1.id},\r\n          {text: option2.value, id: option2.id},\r\n          {text: option3.value, id: option3.id},\r\n          {text: option4.value, id: option4.id}\r\n        ]\r\n      }\r\n  \r\n      this.props.createQuizQuestion(questionItem)\r\n  \r\n      this.setState({\r\n        isFormValid: false,\r\n        rightAnswerId: 1,\r\n        formControls: createFormControls()\r\n      })\r\n    }\r\n  \r\n    createQuizHandler = event => {\r\n      event.preventDefault()\r\n  \r\n      this.setState({\r\n        isFormValid: false,\r\n        rightAnswerId: 1,\r\n        formControls: createFormControls()\r\n      })\r\n      this.props.finishCreateQuiz()\r\n    }\r\n  \r\n    changeHandler = (value, controlName) => {\r\n      const formControls = {...this.state.formControls}\r\n      const control = {...formControls[controlName]}\r\n  \r\n      control.touched = true\r\n      control.value = value\r\n      control.valid = validate(control.value, control.validation)\r\n  \r\n      formControls[controlName] = control\r\n  \r\n      this.setState({\r\n        formControls,\r\n        isFormValid: validateForm(formControls)\r\n      })\r\n    }\r\n  \r\n    renderControls() {\r\n      return Object.keys(this.state.formControls).map((controlName, index) => {\r\n        const control = this.state.formControls[controlName]\r\n  \r\n        return (\r\n          <Auxiliary key={controlName + index}>\r\n            <Input\r\n              label={control.label}\r\n              value={control.value}\r\n              valid={control.valid}\r\n              shouldValidate={!!control.validation}\r\n              touched={control.touched}\r\n              errorMessage={control.errorMessage}\r\n              onChange={event => this.changeHandler(event.target.value, controlName)}\r\n            />\r\n            {index === 0 ? <hr/> : null}\r\n          </Auxiliary>\r\n        )\r\n      })\r\n    }\r\n  \r\n    selectChangeHandler = event => {\r\n      this.setState({\r\n        rightAnswerId: +event.target.value\r\n      })\r\n    }\r\n  \r\n    render() {\r\n      const select = <Select\r\n        label=\"Выберите правильный ответ\"\r\n        value={this.state.rightAnswerId}\r\n        onChange={this.selectChangeHandler}\r\n        options={[\r\n          {text: 1, value: 1},\r\n          {text: 2, value: 2},\r\n          {text: 3, value: 3},\r\n          {text: 4, value: 4}\r\n        ]}\r\n      />\r\n  \r\n      return (\r\n        <div className={classes.QuizCreator}>\r\n          <div>\r\n            <h1>Создание теста</h1>\r\n  \r\n            <form onSubmit={this.submitHandler}>\r\n  \r\n              {this.renderControls()}\r\n  \r\n              {select}\r\n  \r\n              <Button\r\n                type=\"primary\"\r\n                onClick={this.addQuestionHandler}\r\n                disabled={!this.state.isFormValid}\r\n              >\r\n                Добавить вопрос\r\n              </Button>\r\n  \r\n              <Button\r\n                type=\"success\"\r\n                onClick={this.createQuizHandler}\r\n                disabled={this.props.quiz.length === 0}\r\n              >\r\n                Создать тест\r\n              </Button>\r\n  \r\n            </form>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quiz: state.create.quiz\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        createQuizQuestion: item => dispatch(createQuizQuestion(item)),\r\n        finishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator)","import {\r\n    CREATE_QUIZ_QUESTION,\r\n    RESET_QUIZ_CREATION\r\n} from '../Actions/actionsTypes'\r\nimport axios from '../../axios/axios-quiz'\r\n\r\nexport function createQuizQuestion(item) {\r\n    return {\r\n        type: CREATE_QUIZ_QUESTION,\r\n        item\r\n    }\r\n}\r\n\r\nexport function resetQuizCreation() {\r\n    return {\r\n        type: RESET_QUIZ_CREATION\r\n    }\r\n}\r\n\r\nexport function finishCreateQuiz() {\r\n    return async (dispatch, getState) => {\r\n        await  axios.post('/quizes.json', getState().create.quiz)\r\n        dispatch(resetQuizCreation())\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { logout } from '../../Store/Actions/auth'\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.logout()\r\n    }\r\n    render() {\r\n        return <Redirect to={'/'} />\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        logout: () => dispatch(logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout)","import React, { Component } from 'react';\nimport Layout from '../src/HOC/Layout/Layout'\nimport Quiz from '../src/containers/Quiz/Quiz'\nimport QuizList from '../src/containers/QuizList/QuizList'\nimport Auth from '../src/containers/Auth/Auth'\nimport QuizCreator from '../src/containers/QuizCreator/QuizCreator'\nimport Logout from '../src/components/Logout/Logout'\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { autologin } from '../src/Store/Actions/auth'\n\n\n\nclass App extends Component {\n  \n    componentDidMount() {\n        this.props.autologin()\n    }\n  \n    render() {\n\n    let routes = (\n        <Switch>\n            <Route path=\"/auth\" component={Auth}/>\n            <Route path=\"/quiz/:id\" component={Quiz}/>\n            <Route path=\"/\" exact component={QuizList}/>\n            <Redirect to={'/'} />\n        </Switch>\n    )\n\n    if (this.props.isAuthenticated) {\n        routes = (\n            <Switch>\n            <Route path=\"/auth\" component={Auth}/>\n            <Route path=\"/quiz-creator\" component={QuizCreator}/>\n            <Route path=\"/quiz/:id\" component={Quiz}/>\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/\" exact component={QuizList}/>\n            <Redirect to={'/'} />\n        </Switch>\n        )\n    }\n\n    return (\n        <Layout>\n            { routes }\n        </Layout>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.auth.token\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        autologin: () => dispatch(autologin())\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App))\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n    FETCH_QUIZES_START,\r\n    FETCH_QUIZES_SUCCESS,\r\n    FETCH_QUIZES_ERROR,\r\n    FETCH_QUIZ_SUCCESS,\r\n    QUIZ_SET_STATE,\r\n    FINISH_QUIZ,\r\n    QUIZ_NEXT_QUESTION,\r\n    QUIZ_RETRY\r\n} from '../Actions/actionsTypes'\r\n\r\n\r\nconst initialState = {\r\n    quizes: [],\r\n    loading: false,\r\n    error: null,\r\n    results: {},\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null,\r\n    quiz: null\r\n}\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_QUIZES_START:\r\n            return {\r\n                ...state, \r\n                loading: true\r\n            }\r\n        case FETCH_QUIZES_SUCCESS:\r\n            return {\r\n                ...state, \r\n                loading: false, \r\n                quizes: action.quizes\r\n            }\r\n        case FETCH_QUIZES_ERROR:\r\n            return {\r\n                ...state, \r\n                loading: false, \r\n                error: action.error\r\n            }\r\n        case FETCH_QUIZ_SUCCESS:\r\n            return {\r\n                ...state, \r\n                loading: false, \r\n                quiz: action.quiz\r\n            }    \r\n        case QUIZ_SET_STATE:\r\n            return {\r\n                ...state, \r\n                answerState: action.answerState, \r\n                results: action.results\r\n            }\r\n        case FINISH_QUIZ:\r\n            return {\r\n                ...state, \r\n                isFinished: true\r\n            }\r\n        case QUIZ_NEXT_QUESTION:\r\n            return {\r\n                ...state,\r\n                answerState: null,\r\n                activeQuestion: action.number\r\n            }    \r\n        case QUIZ_RETRY:\r\n            return {\r\n                ...state, \r\n                activeQuestion: 0,\r\n                answerState: null,\r\n                isFinished: false,\r\n                results: {}\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\nCREATE_QUIZ_QUESTION,\r\nRESET_QUIZ_CREATION\r\n} from '../Actions/actionsTypes'\r\n\r\nconst initialState = {\r\n    quiz: []\r\n}\r\n\r\nexport default function createReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case CREATE_QUIZ_QUESTION:\r\n            return {\r\n                ...state,\r\n                quiz: [...state.quiz, action.item]\r\n            }\r\n        case RESET_QUIZ_CREATION:\r\n            return {\r\n                ...state,\r\n                quiz: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    AUTH_SUCCESS,\r\n    AUTH_LOGOUT\r\n} from '../Actions/actionsTypes'\r\n\r\nconst initialState = {\r\n    token: null\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case AUTH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        case AUTH_LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport quizReducer from './quiz'\r\nimport createReducer from './create'\r\nimport authReducer from './auth'\r\n\r\n\r\nexport default combineReducers({\r\n    quiz: quizReducer,\r\n    create: createReducer,\r\n    auth: authReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, compose, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './Store/Reducers/rootReducer'\nimport thunk from 'redux-thunk'\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose;\n\nconst store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    ))\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\n\nReactDOM.render(app, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}